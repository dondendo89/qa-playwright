# Render Blueprint
services:
  # Web service (Next.js frontend)
  - type: web
    name: qa-playwright-web
    env: docker
    dockerfilePath: ./infra/docker/web.Dockerfile
    healthCheckPath: /api/health
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: qa-playwright-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: qa-playwright-redis
          type: redis
          property: connectionString
      - key: SESSION_SECRET
        generateValue: true
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      - key: NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY
        sync: false
      - key: EMAIL_SERVER
        sync: false
      - key: EMAIL_FROM
        sync: false
      - key: S3_BUCKET
        sync: false
      - key: S3_REGION
        sync: false
      - key: S3_ACCESS_KEY
        sync: false
      - key: S3_SECRET_KEY
        sync: false
      - key: SLACK_WEBHOOK_URL
        sync: false
      - key: APP_URL
        sync: false
    autoDeploy: true
    buildCommand: pnpm build

  # Worker service (BullMQ + Playwright)
  - type: worker
    name: qa-playwright-worker
    env: docker
    dockerfilePath: ./infra/docker/worker.Dockerfile
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: qa-playwright-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: qa-playwright-redis
          type: redis
          property: connectionString
      - key: WORKER_CONCURRENCY
        value: "2"
      - key: EMAIL_SERVER
        sync: false
      - key: EMAIL_FROM
        sync: false
      - key: S3_BUCKET
        sync: false
      - key: S3_REGION
        sync: false
      - key: S3_ACCESS_KEY
        sync: false
      - key: S3_SECRET_KEY
        sync: false
      - key: SLACK_WEBHOOK_URL
        sync: false
    autoDeploy: true
    buildCommand: pnpm build

# Database (PostgreSQL)
databases:
  - name: qa-playwright-db
    plan: standard
    postgresMajorVersion: 15

# Redis
services:
  - type: redis
    name: qa-playwright-redis
    plan: standard
    ipAllowList: [] # Consenti tutte le connessioni